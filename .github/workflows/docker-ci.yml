name: Build and Push Modified Services

on:
  push:
    branches: [main, dev]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      apigateway: ${{ steps.filter.outputs.apigateway }}
      client: ${{ steps.filter.outputs.client }}
      database: ${{ steps.filter.outputs.database }}
      oauth: ${{ steps.filter.outputs.oauth }}
      cloudinary: ${{ steps.filter.outputs.cloudinary }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Detect changed paths
        id: filter
        run: |
          git fetch origin main --depth=2
          CHANGED=$(git diff --name-only HEAD^ HEAD)

          echo "Files changed:\n$CHANGED"

          echo "apigateway=$(echo "$CHANGED" | grep -q '^MaClasse.ApiGateway/' && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "client=$(echo "$CHANGED" | grep -q '^MaClasse.Client/' && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "database=$(echo "$CHANGED" | grep -q '^Service.Database/' && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "oauth=$(echo "$CHANGED" | grep -q '^Service.OAuth/' && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "cloudinary=$(echo "$CHANGED" | grep -q '^Service.Cloudinary/' && echo true || echo false)" >> $GITHUB_OUTPUT

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --logger trx --results-directory TestResults

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults

  build-apigateway:
    needs: [detect-changes, run-tests]
    if: needs.detect-changes.outputs.apigateway == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/apigateway:latest -f MaClasse.ApiGateway/Dockerfile . --build-arg PROJECT_PATH=MaClasse.ApiGateway
          docker push ghcr.io/${{ github.repository_owner }}/apigateway:latest

  build-client:
    needs: [detect-changes, run-tests]
    if: needs.detect-changes.outputs.client == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/client:latest -f MaClasse.Client/Dockerfile . --build-arg PROJECT_PATH=MaClasse.Client
          docker push ghcr.io/${{ github.repository_owner }}/client:latest

  build-database:
    needs: [detect-changes, run-tests]
    if: needs.detect-changes.outputs.database == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/database:latest -f Service.Database/Dockerfile . --build-arg PROJECT_PATH=Service.Database
          docker push ghcr.io/${{ github.repository_owner }}/database:latest

  build-oauth:
    needs: [detect-changes, run-tests]
    if: needs.detect-changes.outputs.oauth == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/oauth:latest -f Service.OAuth/Dockerfile . --build-arg PROJECT_PATH=Service.OAuth
          docker push ghcr.io/${{ github.repository_owner }}/oauth:latest
  
  build-cloudinary:
    needs: [detect-changes, run-tests]
    if: needs.detect-changes.outputs.cloudinary == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/cloudinary:latest -f Service.Cloudinary/Dockerfile . --build-arg PROJECT_PATH=Service.Cloudinary
          docker push ghcr.io/${{ github.repository_owner }}/cloudinary:latest
