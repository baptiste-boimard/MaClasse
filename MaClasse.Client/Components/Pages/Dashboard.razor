@page "/dashboard"
@using System.Security.Claims
@using MaClasse.Client.Components.Auth
@using MaClasse.Client.States
@using MaClasse.Shared.Models
@using Microsoft.AspNetCore.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<h3>Dashboard</h3>
<p>✅ Vous êtes connecté et avez accès à cette page sécurisée.</p>
<p><strong>IdSession :</strong> @userInformation!.Id</p>
<p><strong>Id :</strong> @userInformation!.Id</p>
<p><strong>Email :</strong> @userInformation.Email</p>
<p><strong>Name :</strong> @userInformation.Name</p>
<p><strong>Role :</strong> @userInformation.Role</p>
<p><strong>GivenName :</strong> @userInformation.GivenName</p>
<p><strong>FamilyName :</strong> @userInformation.FamilyName</p>
<p><strong>Picture :</strong> @userInformation.Picture</p>
<p><strong>CreatedAt :</strong> @userInformation.CreatedAt</p>
<p><strong>UpdatedAt :</strong> @userInformation.UpdatedAt</p>

@code {
    private readonly UserState _userState;

    public Dashboard(UserState userState)
    {
        _userState = userState;
    }

    private UserState? userInformation;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        

        if (user.Identity is { IsAuthenticated: true })
        {
            //* Récupére les infos dans le UserState
            userInformation = _userState.GetUser();
        }
        
        //! Gestion de l'erreur retour à la page de login
    }
}