@using MaClasse.Shared.Models.Scheduler
@using Variant = MudBlazor.Variant


<div style="
display: flex; /* Faire de ce div un conteneur flex */
    flex-direction: column; /* Pour que les enfants s'empilent verticalement */
    height: 100%; /* Prend toute la hauteur de son parent (.right-column) */
    /* La bordure et le padding devraient être sur le .right-column parent pour l'alignement */
    /* Si vous voulez une bordure interne, vous pouvez la laisser ici */
    /*border: #1E88E5 solid 1px;*/
    /*border-radius: 0.8rem;*/
    padding: 0.5rem; /* Padding interne pour le contenu du Scheduler */
">
    <div style="
        display: flex;
        flex-direction: column; /* Conserver la mise en page de vos contrôles */
        justify-content: space-between;
        align-items: center;
        padding-bottom: 16px; /* Ajout d'un padding pour séparer des dates */
        flex-shrink: 0; /* Important: Empêche cette section de rétrécir */
        /* height: 7rem; */ /* Si vous voulez une hauteur fixe pour les contrôles, mais 'auto' est souvent mieux */
        width: @schedulerWidth;
        /*height: 7rem*/
    ">

        <div style="display: flex; flex-direction: row; align-items: center; justify-content: space-evenly">
            <MudButton
                StartIcon="@Icons.Material.Filled.Autorenew"
                Variant="Variant.Filled"
                Color="Color.Secondary"
                OnClick="@GoToToday">Aujourd'hui
            </MudButton>

            <div style="margin-left: 2rem">
                <MudButtonGroup Color="Color.Secondary" Variant="Variant.Outlined">

                    <MudIconButton
                        Icon="@Icons.Material.Filled.CalendarViewDay"
                        OnClick="@(() => SetSchedulerView(0))">
                    </MudIconButton>

                    <MudIconButton
                        Icon="@Icons.Material.Filled.CalendarViewWeek"
                        OnClick="@(() => SetSchedulerView(1))">
                    </MudIconButton>

                </MudButtonGroup>
            </div>

        </div>

        <div style="display: flex; flex-direction: row; align-items: center;">
            <MudIconButton Icon="@Icons.Material.Filled.CalendarToday"
                           Color="Color.Primary"
                           OnClick="@(() => datePickerOpen = true)"/>

            <MudIconButton Icon="@Icons.Material.Filled.ChevronLeft" OnClick="@GoToPrevious"/>

            <MudText Typo="Typo.h6">@DisplayedDateLabel</MudText>

            <MudIconButton Icon="@Icons.Material.Filled.ChevronRight" OnClick="@GoToNext"/>


            <MudIconButton Icon="@Icons.Material.Filled.Add"
                           Disabled="_schedulerState.isReadOnly"
                           Color="Color.Primary"
                           OnClick="() => OpenNewAppointment()"/>
        </div>
    </div>

    @if (showContextMenu)
    {
        <MudPaper id="custom-context-menu"
                  Class="mud-elevation-8"
                  Style="@($"position:fixed; top:{menuY}px; left:{menuX}px; z-index:9999; min-width: 150px; padding: 0.5rem; background: white; border-radius: 4px; box-shadow: 0px 2px 8px rgba(0,0,0,0.2);")"
                  @onmousedown:stopPropagation>
            <MudList T="object">
                <MudListItem T="object" OnClick="@(() => { OpenLessonForSelectedAppointment(); CloseCustomMenu(); })">
                    <MudText>Afficher</MudText>
                </MudListItem>
                <MudListItem T="object" OnClick="@(() => { OpenEditPanelForSelectedAppointment(); CloseCustomMenu(); })">
                    <MudText>Modifier</MudText>
                </MudListItem>

            </MudList>
        </MudPaper>
    }

    @if (datePickerOpen)
    {
        <div style="
            width: 20rem;  
            position: absolute;
            top: 6.25rem;
            z-index: 1000;
            background: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            padding: 1rem;">
            <MudPaper>
                <MudDatePicker
                    PickerMonth="_currentMonth"
                    Label="Sélectionner une date"
                    Date="@currentDate"
                    PickerVariant="PickerVariant.Static"
                    DateChanged="OnDatePicked"/>
                <MudButton Variant="Variant.Text" OnClick="@(() => datePickerOpen = false)">Fermer</MudButton>
            </MudPaper>
        </div>
    }

    @if (showAppointmentPanel)
    {
        <div style="
        width: 20rem;
        position: absolute;
        top: 6.25rem;
        z-index: 1000;
        background: white;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        padding: 1rem;">
            <AddAppointmentPage
                Model="@selectedAppointment"
                Start="@selectedStart"
                End="@selectedEnd"
                OnSave="OnAppointmentSaved"
                OnCancel="ClosePanel" 
                IsEditMode="@isEditMode"
                OnDelete="OnAppointmentDeleted"/>
        </div>
    }

    <div style="
        flex-grow: 1; /* TRÈS IMPORTANT: Prend tout l'espace vertical restant */
        /* flex-basis: 0; */ /* Bonne pratique avec flex-grow */
        overflow-y: auto; /* PERMET LE DÉFILEMENT DU CALENDRIER LUI-MÊME */
        width: 100%; /* S'assure que le RadzenScheduler prend la largeur de son parent */
         @($"width: {schedulerWidth};") 
    ">
        <RadzenScheduler @ref="@scheduler"
                         @bind-Date="currentDate"
                         SelectedIndex="@selectedViewIndex"
                         SlotRender=@OnSlotRender
                         style="@($"height: 100%; width: {schedulerWidth};")"
                         TItem="Appointment"
                         Data=@appointments
                         StartProperty="Start"
                         EndProperty="End"
                         ShowHeader="false"
                         TextProperty="Text"
                         SlotSelect=@OnSlotSelect
                         AppointmentSelect=@OnAppointmentSelect
                         AppointmentRender=@OnAppointmentRender
                         DaySelect="@OnDaySelect"
                         AppointmentMove=@OnAppointmentMove>
            <RadzenDayView StartTime="@startTime" EndTime="@endTime" TimeFormat="HH:mm"/>
            <RadzenWeekView StartTime="@startTime" EndTime="@endTime" TimeFormat="HH:mm"/>
        </RadzenScheduler>
    </div>
</div>
